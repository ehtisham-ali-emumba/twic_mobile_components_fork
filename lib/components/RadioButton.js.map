{"version":3,"sources":["../../src/components/RadioButton.tsx"],"names":["TransparentButtonsBorder","options","borderRadius","borderColor","Colors","lightBoxShadowGrey","CardContainer","View","Metrics","doubleBaseMargin","props","white","APP_CONSTANTS","IS_ANDROID","isSelected","black","UnselectedRadioButtonContainer","lightGrey","RadioButtonContainer","RadioButtonIndicator","RadioButton","label","onCheckboxChange","shadowOptions","testId","backgroundColor","textColor","SECONDARY_BUTTONS_AND_FIELDS_SHADOW","width","height","bottom","borderBottomColor","alignItems","alignSelf","smallMargin","paddingLeft","justifyContent","Fonts","size","medium"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { If, Then, Else } from \"react-if\";\nimport styled from \"styled-components/native\";\nimport { propOr } from \"ramda\";\n\nimport { Metrics, Fonts, Colors, APP_CONSTANTS } from \"../commons\";\n\nimport { AppHeading } from \"./AppStyledComponents\";\nimport BoxShadow from \"./BoxShadow\";\n\ntype CardContainerProps = {\n  backgroundColor?: string;\n  isSelected: boolean;\n};\n\ntype TransparentButtonsBorderType = {\n  borderRadius?: number;\n  borderColor?: string;\n};\n\nexport const TransparentButtonsBorder = (options?: TransparentButtonsBorderType) => {\n  const { borderRadius = 4, borderColor = Colors.lightBoxShadowGrey } = options || {};\n  return `\n    border-right-width: 1;\n    border-left-width: 1;\n    border-bottom-width: 1;\n    border-top-width: 0.25;\n    border-radius: ${borderRadius};\n    border-color: ${borderColor}`;\n};\nexport const CardContainer = styled(View)<CardContainerProps>`\n  flex-direction: row;\n  height: 45;\n  padding-horizontal: ${Metrics.doubleBaseMargin};\n  background-color: ${(props) => propOr(Colors.white, \"backgroundColor\", props)};\n  border-radius: 5;\n  align-items: center;\n\n  ${(props) => !APP_CONSTANTS.IS_ANDROID && TransparentButtonsBorder({ borderColor: props.isSelected ? Colors.black : Colors.lightBoxShadowGrey })}\n`;\n\nexport const UnselectedRadioButtonContainer = styled(View)<any>`\n  /* top: 3.5; */\n  height: 20;\n  width: 20;\n  border-radius: 50;\n  background-color: ${Colors.lightGrey};\n`;\n\nexport const RadioButtonContainer = styled(View)<any>`\n  /* top: 3.5; */\n  height: 20;\n  width: 20;\n  border-radius: 50;\n  align-items: center;\n  justify-content: center;\n  border-width: 1.5;\n  border-color: ${Colors.white};\n`;\n\nexport const RadioButtonIndicator = styled(View)<any>`\n  height: 7;\n  width: 7;\n  border-radius: 50;\n  background-color: ${Colors.white};\n`;\n\nexport type RadioButtonProps = {\n  isSelected: boolean;\n  label: string;\n  onCheckboxChange(value): void;\n  shadowOptions?: object;\n  testId?: string;\n};\nexport const RadioButton = (props: RadioButtonProps) => {\n  const { isSelected = false, label = \"\", onCheckboxChange, shadowOptions = {}, testId = \"\" } = props;\n\n  const backgroundColor = isSelected ? Colors.black : Colors.white;\n  const textColor = isSelected ? Colors.white : Colors.black;\n  return (\n    <BoxShadow\n      shadowOptions={{\n        ...APP_CONSTANTS.SECONDARY_BUTTONS_AND_FIELDS_SHADOW,\n        width: \"92%\",\n        height: isSelected ? 5 : 3.5,\n        bottom: 6.5,\n        backgroundColor: backgroundColor,\n        borderBottomColor: backgroundColor,\n        ...shadowOptions,\n      }}\n      shadowContainerStyle={{\n        alignItems: \"stretch\",\n      }}\n      otherOptions={{\n        alignSelf: \"center\",\n      }}\n      onPress={() => onCheckboxChange(!isSelected)}\n      contentWrapperStyle={{\n        borderRadius: Metrics.smallMargin,\n      }}\n      testId={testId}\n    >\n      <CardContainer backgroundColor={backgroundColor} isSelected={isSelected}>\n        <If condition={isSelected}>\n          <Then>\n            <RadioButtonContainer>\n              <RadioButtonIndicator />\n            </RadioButtonContainer>\n          </Then>\n          <Else>\n            <UnselectedRadioButtonContainer />\n          </Else>\n        </If>\n        <View style={{ paddingLeft: Metrics.doubleBaseMargin, justifyContent: \"center\" }}>\n          <AppHeading color={textColor} fontSize={Fonts.size.medium} paddingTop={0}>\n            {label}\n          </AppHeading>\n        </View>\n      </CardContainer>\n    </BoxShadow>\n  );\n};\n"],"file":"RadioButton.js"}