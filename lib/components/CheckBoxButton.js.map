{"version":3,"sources":["../../src/components/CheckBoxButton.tsx"],"names":["CheckBoxContainer","styled","TouchableOpacity","Metrics","baseMargin","CheckBoxButton","props","fieldProps","containerStyle","checkedColor","uncheckedColor","onPress","iconContainer","textStyle","iconRight","title","checked","checkedIcon","Colors","blue","uncheckedIcon","darkGrey","flexDirection","styles","textStyles","StyleSheet","create","backgroundColor","white","borderColor","marginLeft","marginRight","padding","borderRadius","color","black","fontWeight","fontSize","APP_CONSTANTS","IS_ANDROID","Fonts","size","extraSmall","small","fontFamily"],"mappings":"gSAAA,oDACA,0FACA,sFACA,wEACA,yCAEA,mC,uoCAmBA,GAAMA,CAAAA,iBAAiB,CAAGC,gBAAOC,gBAAV,oMAEJC,iBAAQC,UAAR,CAAqB,CAFjB,CAAvB,CAQO,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAoC,CAChE,GAAQC,CAAAA,UAAR,CAA4CD,KAA5C,CAAQC,UAAR,uBAA4CD,KAA5C,CAAoBE,cAApB,CAAoBA,cAApB,gCAAqC,EAArC,uBACA,GACEC,CAAAA,YADF,CAWIF,UAXJ,CACEE,YADF,CAEEC,cAFF,CAWIH,UAXJ,CAEEG,cAFF,CAGEC,OAHF,CAWIJ,UAXJ,CAGEI,OAHF,uBAWIJ,UAXJ,CAIEK,aAJF,CAIEA,aAJF,gCAIkB,EAJlB,6CAWIL,UAXJ,CAKEM,SALF,CAKEA,SALF,gCAKc,EALd,6CAWIN,UAXJ,CAMEO,SANF,CAMEA,SANF,gCAMc,KANd,uBAOEC,KAPF,CAWIR,UAXJ,CAOEQ,KAPF,CAQEC,OARF,CAWIT,UAXJ,CAQES,OARF,uBAWIT,UAXJ,CASEU,WATF,CASEA,WATF,gCASgB,oBAAC,kBAAD,EAAW,IAAI,CAAC,aAAhB,CAA8B,KAAK,CAAER,YAAY,CAAGA,YAAH,CAAkBS,gBAAOC,IAA1E,CAAgF,IAAI,CAAE,EAAtF,8EAThB,6CAWIZ,UAXJ,CAUEa,aAVF,CAUEA,aAVF,gCAUkB,oBAAC,oBAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,KAAK,CAAEV,cAAc,CAAGA,cAAH,CAAoBQ,gBAAOG,QAAtE,CAAgF,IAAI,CAAE,EAAtF,8EAVlB,uBAYA,MACE,qBAAC,iBAAD,EAAmB,KAAK,CAAE,CAAC,CAAEC,aAAa,CAAER,SAAS,CAAG,aAAH,CAAmB,KAA7C,CAAD,CAAuDN,cAAvD,CAA1B,CAAkG,OAAO,CAAEG,OAA3G,6EACE,oBAAC,iBAAD,EAAM,KAAK,CAAE,CAACY,MAAM,CAACX,aAAR,CAAuBA,aAAvB,CAAb,6EAAqDI,OAAO,CAAGC,WAAH,CAAiBG,aAA7E,CADF,CAEGL,KAAK,EAAI,oBAAC,iBAAD,EAAM,KAAK,CAAE,CAACQ,MAAM,CAACC,UAAR,CAAoBX,SAApB,CAAb,8EAA8CE,KAA9C,CAFZ,CADF,CAMD,CApBM,C,sCAqBP,GAAMQ,CAAAA,MAAM,CAAGE,wBAAWC,MAAX,CAAkB,CAC/Bd,aAAa,CAAE,CACbe,eAAe,CAAET,gBAAOU,KADX,CAEbC,WAAW,CAAEX,gBAAOU,KAFP,CAGbE,UAAU,CAAE,CAHC,CAIbC,WAAW,CAAE,CAJA,CAKbC,OAAO,CAAE,CALI,CAMbC,YAAY,CAAE,CAND,CADgB,CAS/BT,UAAU,CAAE,CACVM,UAAU,CAAE,EADF,CAEVI,KAAK,CAAEhB,gBAAOiB,KAFJ,CAGVC,UAAU,CAAE,KAHF,CAIVC,QAAQ,CAAEC,uBAAcC,UAAd,CAA2BC,eAAMC,IAAN,CAAWC,UAAtC,CAAmDF,eAAMC,IAAN,CAAWE,KAJ9D,CAKVC,UAAU,CAAE,oBALF,CATmB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport CheckIcon from \"react-native-vector-icons/AntDesign\";\nimport styled from \"styled-components/native\";\nimport { Text, View, StyleSheet, StyleProp, TextStyle, ViewStyle } from \"react-native\";\n\nimport { APP_CONSTANTS, Colors, Metrics, Fonts } from \"../commons\";\n\ntype FormikCheckboxFieldType = {\n  fieldName: string;\n  fieldProps: {\n    checked: boolean;\n    checkedColor?: string;\n    uncheckedColor?: string;\n    checkedIcon?: React.ReactElement<{}>;\n    uncheckedIcon?: React.ReactElement<{}>;\n    onPress?(): void;\n    textStyle?: StyleProp<TextStyle>;\n    iconRight?: boolean;\n    title?: string;\n    iconContainer?: StyleProp<ViewStyle>;\n  };\n  containerStyle?: StyleProp<ViewStyle>;\n};\n\nconst CheckBoxContainer = styled.TouchableOpacity`\n  display: flex;\n  margin-bottom: ${Metrics.baseMargin + 5};\n  margin-top: 2px;\n  padding-vertical: 5px;\n  align-items: center;\n`;\n\nexport const CheckBoxButton = (props: FormikCheckboxFieldType) => {\n  const { fieldProps, containerStyle = {} } = props;\n  const {\n    checkedColor,\n    uncheckedColor,\n    onPress,\n    iconContainer = {},\n    textStyle = {},\n    iconRight = false,\n    title,\n    checked,\n    checkedIcon = <CheckIcon name=\"checksquare\" color={checkedColor ? checkedColor : Colors.blue} size={17} />,\n    uncheckedIcon = <Icon name=\"square-o\" color={uncheckedColor ? uncheckedColor : Colors.darkGrey} size={17} />,\n  } = fieldProps;\n  return (\n    <CheckBoxContainer style={[{ flexDirection: iconRight ? \"row-reverse\" : \"row\" }, containerStyle]} onPress={onPress}>\n      <View style={[styles.iconContainer, iconContainer]}>{checked ? checkedIcon : uncheckedIcon}</View>\n      {title && <Text style={[styles.textStyles, textStyle]}>{title}</Text>}\n    </CheckBoxContainer>\n  );\n};\nconst styles = StyleSheet.create({\n  iconContainer: {\n    backgroundColor: Colors.white,\n    borderColor: Colors.white,\n    marginLeft: 0,\n    marginRight: 0,\n    padding: 0,\n    borderRadius: 0,\n  },\n  textStyles: {\n    marginLeft: 10,\n    color: Colors.black,\n    fontWeight: \"300\",\n    fontSize: APP_CONSTANTS.IS_ANDROID ? Fonts.size.extraSmall : Fonts.size.small,\n    fontFamily: \"TTCommons-DemiBold\",\n  },\n});\n"],"file":"CheckBoxButton.js"}