{"version":3,"sources":["../../src/components/BoxShadow.tsx"],"names":["BoxShadowContainer","styled","View","BoxShadowContainerWithOpacity","TouchableOpacity","ContentWrapper","APP_CONSTANTS","IS_ANDROID","ContentWrapperWithOpacity","IosShadow","props","children","containerStyle","onPress","option","disabled","testId","opacity","width","zIndex","borderRadius","borderBottomWidth","backgroundColor","Colors","white","borderBottomColor","AndroidShadow","contentWrapperStyle","BoxShadow","shadowOptions","shadowContainerStyle","otherOptions","touchableOpactiyRequired"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { If, Then, Else } from \"react-if\";\nimport { View } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport { APP_CONSTANTS, Colors } from \"../commons\";\n\nimport { AddElementShadow } from \"./AddElementShadow\";\n\ntype BoxShadowType = {\n  children: any;\n  shadowOptions: {\n    width?: string;\n    borderRadius?: number;\n    opacity?: number;\n    // below three properties are for shadow element to\n    // keep itself hidden by matching properties of\n    // element above it\n    backgroundColor?: string;\n    borderBottomColor?: string;\n    borderBottomWidth?: number;\n\n    shadowColor: string;\n    shadowOpacity: number;\n    shadowRadius: number;\n    shadowOffset: {\n      // x\n      width: number;\n      // y\n      height: number;\n    };\n    // Height and bottom is given so that this element\n    // starts from above the bottom line of top element\n    // They should be same as 'shadowOffset -> height'\n    height: number;\n    bottom: number;\n  };\n  disabled?: boolean;\n  otherOptions?: Object;\n  shadowContainerStyle?: Object;\n  contentWrapperStyle?: Object;\n  touchableOpactiyRequired?: boolean;\n  onPress?: () => void;\n  testId?: string;\n};\n\nconst BoxShadowContainer = styled.View`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BoxShadowContainerWithOpacity = styled.TouchableOpacity`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ContentWrapper = styled.View<any>`\n  z-index: 2;\n  ${APP_CONSTANTS.IS_ANDROID && AddElementShadow()};\n`;\n\nconst ContentWrapperWithOpacity = styled.TouchableOpacity<any>`\n  z-index: 2;\n  ${APP_CONSTANTS.IS_ANDROID && AddElementShadow()};\n`;\n\nconst IosShadow = (props) => {\n  const { children, containerStyle, onPress, option, disabled, testId } = props;\n  const opacity = disabled ? 1 : 0.2;\n  return (\n    <BoxShadowContainerWithOpacity disabled={disabled} activeOpacity={opacity} style={containerStyle} onPress={onPress} testID={testId} accessibilityLabel={testId}>\n      <ContentWrapper>{children}</ContentWrapper>\n      <View\n        style={{\n          width: \"100%\",\n          zIndex: 1,\n          borderRadius: 4,\n          borderBottomWidth: 1,\n          backgroundColor: Colors.white,\n          borderBottomColor: Colors.white,\n          ...option,\n        }}\n      />\n    </BoxShadowContainerWithOpacity>\n  );\n};\n\nconst AndroidShadow = (props) => {\n  const { children, containerStyle, onPress, contentWrapperStyle, disabled, testId } = props;\n  const opacity = disabled ? 1 : 0.2;\n  return (\n    <BoxShadowContainer style={containerStyle} testID={testId} accessibilityLabel={testId}>\n      <ContentWrapperWithOpacity disabled={disabled} activeOpacity={opacity} onPress={onPress} style={{ ...contentWrapperStyle }}>\n        {children}\n      </ContentWrapperWithOpacity>\n    </BoxShadowContainer>\n  );\n};\n\nconst BoxShadow = (props: BoxShadowType) => {\n  const { shadowOptions, children, testId, shadowContainerStyle = {}, disabled = false, otherOptions = {}, touchableOpactiyRequired = true, onPress = () => {}, contentWrapperStyle = {} } = props;\n\n  return (\n    <If condition={touchableOpactiyRequired}>\n      <Then>\n        <If condition={APP_CONSTANTS.IS_ANDROID}>\n          <Then>\n            <AndroidShadow testId={testId} disabled={disabled} containerStyle={shadowContainerStyle} onPress={onPress} contentWrapperStyle={contentWrapperStyle}>\n              {children}\n            </AndroidShadow>\n          </Then>\n          <Else>\n            <IosShadow testId={testId} disabled={disabled} containerStyle={shadowContainerStyle} onPress={onPress} option={{ ...shadowOptions, ...otherOptions }}>\n              {children}\n            </IosShadow>\n          </Else>\n        </If>\n      </Then>\n      <Else>\n        <BoxShadowContainer style={shadowContainerStyle}>\n          <ContentWrapper style={{ ...contentWrapperStyle }}>{children}</ContentWrapper>\n          {!APP_CONSTANTS.IS_ANDROID && (\n            <View\n              style={{\n                width: \"100%\",\n                zIndex: 1,\n                borderRadius: 4,\n                borderBottomWidth: 1,\n                backgroundColor: Colors.white,\n                borderBottomColor: Colors.white,\n                ...shadowOptions,\n                ...otherOptions,\n              }}\n            />\n          )}\n        </BoxShadowContainer>\n      </Else>\n    </If>\n  );\n};\n\nexport default BoxShadow;\n"],"file":"BoxShadow.js"}