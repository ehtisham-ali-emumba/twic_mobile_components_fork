{"version":3,"sources":["../../src/components/DatePicker.tsx"],"names":["CalendarIcon","props","color","iconTop","pickerStyle","APP_CONSTANTS","IS_ANDROID","position","top","right","Fonts","size","tiny","medium","PICKER_THEME","fonts","fontFamily","roundness","Metrics","baseMargin","isPlatformIos","Platform","OS","DatePickerField","React","useState","pickerColor","Colors","newDimGrey","text","newCharcoalDarkGrey","icon","charcoalLightGrey","colors","setColors","textInputRef","useRef","onConfirmDate","label","value","labelPaddingTop","testId","errorMessage","disabled","textInputContainerStyle","textProps","iconProps","pickerMode","RenderCustomIcon","fieldStyle","width","paddingLeft","paddingRight","paddingVertical","onOpenHandler","datePickerProps","initialValue","pickerStateColor","newDisabled","error","iconColor","disabledText","paddingTop","screenHorizontalPadding","onCancelPress","handleDateSubmission","date","onCloseModal","current","handleBlur","placeholder","primary","blue","backgroundColor","white","Date","handleFocus","newBlue","dateTouchBody","flexDirection","height","paddingHorizontal","dateInput","borderWidth","alignItems","btnTextConfirm","fontSize","h3","dateText","small","black","placeholderText","datePicker","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleProp, View } from 'react-native';\nimport { TextInput } from 'react-native-paper';\nimport DatePicker from 'react-native-datepicker';\nimport { If, Then } from 'react-if';\nimport { clone } from 'ramda';\n\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nimport { APP_CONSTANTS, Colors, Fonts, Metrics } from '../commons';\nimport { AppText } from './AppStyledComponents';\nimport { isEmptyOrNil } from '../commons/Utilities';\n\nconst CalendarIcon = (props) => {\n  const { color, iconTop } = props;\n  const pickerStyle: StyleProp<any> = APP_CONSTANTS.IS_ANDROID\n    ? {\n        position: 'absolute',\n        top: iconTop,\n        right: !APP_CONSTANTS.IS_ANDROID ? 0 : 5,\n        color: color,\n      }\n    : { color: color };\n\n  return <Icon name=\"calendar\" style={pickerStyle} size={APP_CONSTANTS.IS_ANDROID ? Fonts.size.tiny : Fonts.size.medium + 1} color={color} />;\n};\n\nconst PICKER_THEME = {\n  fonts: {\n    medium: {\n      fontFamily: 'TTCommons-Regular',\n    },\n  },\n  roundness: Metrics.baseMargin,\n};\n\ntype DatePickerProps = {\n  label: string;\n  onConfirmDate(date): void;\n  value: any;\n  fieldStyle?: any;\n  labelPaddingTop?: number;\n  onOpenHandler?: () => void;\n  errorMessage?: string;\n  disabled?: boolean;\n  textInputContainerStyle?: object;\n  textProps?: object;\n  iconProps?: object;\n  RenderCustomIcon?: React.ComponentType<{ color: string }>;\n  pickerMode?: 'flat' | 'outlined' | undefined;\n  testId?: string;\n  datePickerProps?: object;\n};\nconst isPlatformIos = Platform.OS === 'ios';\n\nexport const DatePickerField = (props: DatePickerProps) => {\n  const [colors, setColors] = React.useState({ pickerColor: Colors.newDimGrey, text: Colors.newCharcoalDarkGrey, icon: Colors.charcoalLightGrey });\n  const textInputRef = React.useRef<any>(null);\n  const {\n    onConfirmDate,\n    label = '',\n    value = '',\n    labelPaddingTop = 4,\n    testId = '',\n    errorMessage = '',\n    disabled = false,\n    textInputContainerStyle = {},\n    textProps = {},\n    iconProps = {},\n    pickerMode = 'outlined',\n    RenderCustomIcon = CalendarIcon,\n    fieldStyle = {\n      width: '100%',\n      paddingLeft: 0,\n      paddingRight: isPlatformIos ? 0 : 5,\n      paddingVertical: 5,\n    },\n    onOpenHandler = () => {},\n    datePickerProps = {},\n  } = props;\n\n  const initialValue = clone(value);\n  const pickerStateColor = disabled ? Colors.newDisabled : isEmptyOrNil(errorMessage) ? colors.pickerColor : Colors.error;\n  const iconColor = disabled ? Colors.disabledText : colors.icon;\n  const paddingTop = pickerMode === 'flat' ? Metrics.screenHorizontalPadding : 0;\n\n  const onCancelPress = () => {\n    onConfirmDate(initialValue);\n  };\n\n  const handleDateSubmission = (date) => {\n    onConfirmDate(date);\n  };\n  const onCloseModal = () => {\n    textInputRef.current.handleBlur();\n    setColors({ ...colors, pickerColor: Colors.newDimGrey, icon: Colors.charcoalLightGrey });\n  };\n  return (\n    <>\n      <TextInput\n        ref={textInputRef}\n        testID={testId}\n        accessibilityLabel={testId}\n        theme={{\n          ...PICKER_THEME,\n          colors: {\n            placeholder: pickerStateColor,\n            primary: Colors.blue,\n            error: Colors.error,\n            disabled: Colors.newDisabled,\n          },\n        }}\n        style={{ backgroundColor: Colors.white, ...textInputContainerStyle }}\n        mode={pickerMode}\n        label={!isEmptyOrNil(value) ? label : ''}\n        value={!isEmptyOrNil(value) ? value : ''}\n        error={!isEmptyOrNil(errorMessage) ? true : false}\n        underlineColor={pickerStateColor}\n        underlineColorAndroid={pickerStateColor}\n        textAlign=\"auto\"\n        render={() => (\n          <DatePicker\n            date={value}\n            mode=\"date\"\n            placeholder=\"Choose date\"\n            format=\"ll\"\n            minDate=\"1970-01-01\"\n            maxDate={new Date()}\n            confirmBtnText=\"Done\"\n            cancelBtnText=\"Cancel\"\n            onOpenModal={() => {\n              textInputRef.current.handleFocus();\n              setColors({ ...colors, pickerColor: Colors.newBlue, icon: Colors.newBlue });\n              onOpenHandler();\n            }}\n            onCloseModal={onCloseModal}\n            testID={testId}\n            onCancelPress={() => onCancelPress()}\n            onDateChange={(date) => {\n              onCloseModal();\n              handleDateSubmission(date);\n            }}\n            showIcon\n            allowFontScaling={false}\n            adjustsFontSizeToFit={true}\n            iconComponent={<RenderCustomIcon {...iconProps} color={isEmptyOrNil(errorMessage) ? iconColor : Colors.error} />}\n            style={fieldStyle}\n            customStyles={{\n              dateTouchBody: {\n                flexDirection: 'row',\n                height: 45,\n                paddingHorizontal: 15,\n                paddingTop: paddingTop,\n              },\n              dateInput: {\n                top: -2,\n                height: 20,\n                borderWidth: 0,\n                alignItems: 'flex-start',\n              },\n              btnTextConfirm: {\n                color: Colors.blue,\n                fontFamily: 'TTCommons-DemiBold',\n                fontSize: Fonts.size.h3,\n              },\n              dateText: {\n                fontSize: Fonts.size.small,\n                fontFamily: 'TTCommons-Regular',\n                color: Colors.black,\n                paddingTop: labelPaddingTop,\n              },\n              placeholderText: {\n                fontSize: Fonts.size.small,\n                fontFamily: 'TTCommons-Regular',\n                paddingTop: labelPaddingTop,\n                color: Colors.charcoalLightGrey,\n              },\n              // fixing the alignment for ios14\n              datePicker: {\n                justifyContent: 'center',\n              },\n            }}\n            {...datePickerProps}\n          />\n        )}\n        {...textProps}\n      />\n      <If condition={!disabled && !isEmptyOrNil(errorMessage)}>\n        <Then>\n          <View>\n            <AppText color={Colors.error} fontSize={Fonts.size.small}>\n              {errorMessage}\n            </AppText>\n          </View>\n        </Then>\n      </If>\n    </>\n  );\n};\n"],"file":"DatePicker.js"}