{"version":3,"sources":["../../src/components/Avatar.tsx"],"names":["getRoundedBorderRadius","width","height","OverlayFadeInView","roundedStyles","children","overlayContainerStyles","hideOverlay","fadeAnim","React","useRef","Animated","Value","current","useEffect","timing","toValue","duration","useNativeDriver","start","opacity","styles","overlayContainer","Avatar","iconComponent","title","titleStyles","source","imageStyles","rounded","containerStyles","useState","setHideOverlay","borderRadius","imageSize","position","StyleSheet","create","color","fontSize","backgroundColor","top","bottom","left","right","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Animated, Image, ImageStyle, StyleProp, StyleSheet, Text, TextStyle, View, ViewStyle } from \"react-native\";\n\nconst getRoundedBorderRadius = (width: number, height: number): number => {\n  if (width >= height) {\n    return width / 2;\n  }\n  return height / 2;\n};\n\nconst OverlayFadeInView = ({ roundedStyles, children, overlayContainerStyles, hideOverlay }: any) => {\n  const fadeAnim = React.useRef(new Animated.Value(1)).current;\n\n  React.useEffect(() => {\n    if (hideOverlay) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 1000,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [fadeAnim, hideOverlay]);\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n        },\n        styles.overlayContainer,\n        roundedStyles,\n        overlayContainerStyles,\n      ]}\n    >\n      {children}\n    </Animated.View>\n  );\n};\n\ntype AvatarProps = {\n  iconComponent?: () => React.ReactElement<{}>;\n  width: number;\n  height: number;\n  title?: string;\n  source: { uri?: string };\n  titleStyles?: TextStyle;\n  imageStyles?: StyleProp<ImageStyle>;\n  rounded?: boolean;\n  overlayContainerStyles?: ViewStyle;\n  containerStyles?: ViewStyle;\n};\n\nexport const Avatar: React.FC<AvatarProps> = ({ iconComponent, width, height, title, titleStyles, source, imageStyles, rounded = false, overlayContainerStyles, containerStyles }) => {\n  const [hideOverlay, setHideOverlay] = React.useState(false);\n  const roundedStyles = rounded ? { borderRadius: getRoundedBorderRadius(width, height) } : {};\n  const imageSize = { width, height };\n  return (\n    <View style={[{ position: \"relative\" }, roundedStyles, containerStyles, imageSize]}>\n      <Image onLoad={() => setHideOverlay(true)} source={source} style={[imageStyles, roundedStyles, imageSize]} />\n      <OverlayFadeInView hideOverlay={hideOverlay} roundedStyles={roundedStyles} overlayContainerStyles={overlayContainerStyles}>\n        {(title && <Text style={[styles.titleStyles, titleStyles]}>{title}</Text>) || (iconComponent && iconComponent())}\n      </OverlayFadeInView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleStyles: {\n    color: \"#ffffff\",\n    fontSize: 30,\n  },\n  overlayContainer: { backgroundColor: \"#bdbdbd\", position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" },\n});\n"],"file":"Avatar.js"}