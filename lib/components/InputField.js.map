{"version":3,"sources":["../../src/components/InputField.tsx"],"names":["isEmptyOrNil","Utilities","ErrorInputContainer","View","InputErrorText","props","Colors","error","Fonts","size","small","TEXT_INPUT_THEME","fonts","medium","fontFamily","colors","primary","blue","disabled","newDimGrey","placeholder","text","black","roundness","Metrics","baseMargin","InputField","React","useState","icon","charcoalLightGrey","setColors","inputFieldRef","useRef","label","value","inputMode","onChangeHandler","setRef","undefined","onBlurHandler","onFocusHandler","onSubmitEditing","errorMessage","prefix","secureTextEntry","keyboardType","autoCapitalize","showInputLinkComponent","InputLinkComponent","rightIconName","rightIconComponent","multiLine","testId","inputFieldStyle","textProps","iconProps","leftCustomIcon","leftCustomIconProps","customErrorContainerStyle","iconColor","disabledText","useEffect","keyboardDidHide","Platform","OS","Keyboard","dismiss","addListener","ShowPrefixComponent","marginTop","section","color","marginBottom","paddingRight","smallMargin","ShowRightIconComponent","backgroundColor","white","textAlign","val","newBlue","flex","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform, View } from 'react-native';\nimport { TextInput } from 'react-native-paper';\nimport styled from 'styled-components/native';\nimport { isEmpty, path } from 'ramda';\nimport { If } from 'react-if';\n\nimport { Colors, Fonts, Metrics, Utilities } from '../commons';\nimport { _Text } from './AppStyledComponents';\n\nconst { isEmptyOrNil } = Utilities;\n\ntype InputContainerProps = {\n  marginBottom?: number;\n  marginTop?: number;\n  paddingHorizontal?: number;\n};\nconst ErrorInputContainer = styled(View)<InputContainerProps>`\n  flex-direction: row;\n`;\n\nconst InputErrorText = styled((props) => <_Text {...props} />)`\n  color: ${Colors.error};\n  font-size: ${Fonts.size.small};\n  font-family: TTCommons-Regular;\n`;\n\nconst TEXT_INPUT_THEME = {\n  fonts: {\n    medium: {\n      fontFamily: 'TTCommons-Regular',\n    },\n  },\n  colors: {\n    primary: Colors.blue,\n    error: Colors.error,\n    disabled: Colors.newDimGrey,\n    placeholder: Colors.newDimGrey,\n    text: Colors.black,\n  },\n  roundness: Metrics.baseMargin,\n};\nexport type InputFieldProps = {\n  label: string | undefined;\n  value: string;\n  inputMode?: 'outlined' | 'flat' | undefined;\n  disabled?: boolean;\n  errorMessage?: string;\n  placeholder?: string;\n  multiLine?: boolean;\n  setRef?(value: any): void;\n  onChangeHandler(value: any): void;\n  onBlurHandler?(value: any): void;\n  onFocusHandler?(value: any): void;\n  onSubmitEditing?(value: any): void;\n  secureTextEntry?: boolean;\n  keyboardType?: 'default' | 'email-address' | 'numeric' | 'phone-pad';\n  autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters';\n  rightIconName?: string;\n  rightIconComponent?(): React.ReactElement;\n  //styling props\n  InputStyle?: Object;\n  textProps?: Object;\n  iconProps?: Object;\n  showInputLinkComponent?: boolean;\n  InputLinkComponent?(): React.ReactElement;\n  inputFieldStyle?: object;\n  disabledInputStyle?: object;\n  prefix?: string;\n  testId?: string;\n  leftCustomIcon?: string | ((e?: any) => React.ReactElement);\n  leftCustomIconProps?: {};\n  customErrorContainerStyle?: {};\n};\n\nexport const InputField = (props: InputFieldProps) => {\n  const [colors, setColors] = React.useState({ icon: Colors.charcoalLightGrey });\n  const inputFieldRef = React.useRef(null);\n  const {\n    label = '',\n    placeholder = '',\n    value = '',\n    inputMode = 'outlined',\n    disabled = false,\n    onChangeHandler,\n    setRef = undefined,\n    onBlurHandler = () => {},\n    onFocusHandler = () => {},\n    onSubmitEditing = () => {},\n    errorMessage = '',\n    prefix = '',\n    secureTextEntry = false,\n    keyboardType = 'default',\n    autoCapitalize = 'none',\n    showInputLinkComponent = false,\n    InputLinkComponent = () => <></>,\n    rightIconName = '',\n    rightIconComponent,\n    multiLine = false,\n    testId = '',\n\n    //styling props\n    inputFieldStyle,\n    textProps = {},\n    iconProps = {},\n    leftCustomIcon,\n    leftCustomIconProps = {},\n    customErrorContainerStyle = {},\n  } = props;\n\n  const iconColor = disabled ? Colors.disabledText : colors.icon;\n  React.useEffect(() => {\n    const keyboardDidHide = () => {\n      if (Platform.OS === 'android') {\n        Keyboard.dismiss();\n        const onBlurHandler = path(['current', 'input', 'blur'], inputFieldRef) as Function;\n        if (typeof onBlurHandler === 'function') onBlurHandler();\n      }\n    };\n    Keyboard.addListener('keyboardDidHide', keyboardDidHide);\n  }, []);\n\n  const ShowPrefixComponent = () => {\n    if (leftCustomIcon) {\n      return <TextInput.Icon name={leftCustomIcon} size={20} color={!isEmptyOrNil(errorMessage) ? Colors.error : iconColor} style={{ marginTop: inputMode === 'outlined' ? Metrics.baseMargin - 2 : Metrics.section }} {...leftCustomIconProps} />;\n    }\n    if (rightIconComponent) {\n      return rightIconComponent();\n    }\n\n    return !isEmptyOrNil(prefix) ? (\n      <TextInput.Affix text={prefix} textStyle={inputMode === 'outlined' ? { color: Colors.black } : { color: Colors.black, marginBottom: multiLine ? Metrics.baseMargin - 2 : 0, paddingRight: Metrics.smallMargin }} />\n    ) : null;\n  };\n  const ShowRightIconComponent = () => {\n    if (rightIconComponent) {\n      return rightIconComponent();\n    }\n    return !isEmptyOrNil(rightIconName) ? (\n      <TextInput.Icon name={rightIconName} size={20} color={!isEmptyOrNil(errorMessage) ? Colors.error : iconColor} style={{ marginTop: inputMode === 'outlined' ? Metrics.baseMargin - 2 : Metrics.section }} {...iconProps} />\n    ) : null;\n  };\n\n  return (\n    <View style={inputFieldStyle}>\n      <TextInput\n        theme={TEXT_INPUT_THEME}\n        style={{ backgroundColor: Colors.white, textAlign: 'auto' }}\n        testID={testId}\n        accessibilityLabel={testId}\n        ref={setRef || inputFieldRef}\n        placeholder={placeholder}\n        label={label}\n        value={value}\n        mode={inputMode}\n        error={!isEmptyOrNil(errorMessage) ? true : false}\n        disabled={disabled}\n        left={ShowPrefixComponent()}\n        right={ShowRightIconComponent()}\n        // right={<TextInput.Icon name={() => <Icon name={\"caretdown\"} />} />}\n        onChangeText={onChangeHandler}\n        onSubmitEditing={onSubmitEditing}\n        onBlur={(val) => {\n          !isEmptyOrNil(rightIconName) && setColors({ ...colors, icon: Colors.charcoalLightGrey });\n          onBlurHandler(val);\n        }}\n        onFocus={(val) => {\n          !isEmptyOrNil(rightIconName) && setColors({ ...colors, icon: Colors.newBlue });\n          onFocusHandler(val);\n        }}\n        secureTextEntry={secureTextEntry}\n        keyboardType={keyboardType}\n        autoCapitalize={autoCapitalize}\n        multiline={multiLine}\n        numberOfLines={multiLine ? 3 : 1} //For android only\n        maxFontSizeMultiplier={1.1}\n        returnKeyType={multiLine ? 'default' : 'done'}\n        textAlign=\"auto\"\n        {...textProps}\n      />\n      {/* TODO: this view should be conditional */}\n      <If condition={!isEmpty(errorMessage)}>\n        <ErrorInputContainer style={customErrorContainerStyle}>\n          <View style={{ flex: 1 }}>\n            <InputErrorText testID={`${testId}-error`} accessibilityLabel={`${testId}-error`}>\n              {errorMessage}\n            </InputErrorText>\n          </View>\n        </ErrorInputContainer>\n      </If>\n      <If condition={showInputLinkComponent}>\n        <ErrorInputContainer style={customErrorContainerStyle}>\n          <View style={{ flex: 1, alignItems: 'flex-end' }}>\n            <InputLinkComponent />\n          </View>\n        </ErrorInputContainer>\n      </If>\n    </View>\n  );\n};\n"],"file":"InputField.js"}